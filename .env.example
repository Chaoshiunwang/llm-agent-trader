 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/.env.example b/.env.example
index a10642649cd1eb83e5667d26b336bddfa888ff93..d0d0d828472a201acc935a8e25c506055fc27127 100644
--- a/.env.example
+++ b/.env.example
@@ -1,60 +1,70 @@
 # Environment Configuration Template
 # Copy this file to .env and fill in your actual values
 
 # =============================================================================
 # LLM Provider Configuration
 # =============================================================================
 # The system supports automatic provider detection based on available API keys.
 # Simply comment out the provider you don't want to use.
 
 # Azure OpenAI Configuration (Option 1)
# AZURE_OPENAI_API_KEY=your-azure-openai-api-key-here
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_API_VERSION=2024-02-15-preview
#-AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4
# AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4.1
 
#-# Google Gemini Configuration (Option 2)
#-# Comment out to disable Gemini and use only Azure OpenAI
#-GOOGLE_API_KEY=your_google_api_key_here
#-GEMINI_MODEL=gemini-pro
# OpenAI (ChatGPT) Configuration (Option 2)
# Comment out to disable OpenAI and use another provider
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4.1-mini
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_ORGANIZATION=your-openai-organization-id
OPENAI_SYSTEM_PROMPT=
 
#-# Google Gemini Configuration (Option 2)
#-# Comment out to disable Gemini and use only Azure OpenAI
#-OPENAI_API_KEY=your_google_api_key_here
#-OPENAI_MODEL=gemini-pro
# Google Gemini Configuration (Option 3)
# Comment out to disable Gemini and use another provider
#GOOGLE_API_KEY=your-gemini-api-key-here
#GEMINI_MODEL=gemini-pro
 
 # =============================================================================
 # Provider Selection Logic
 # =============================================================================
 # - If only AZURE_OPENAI_API_KEY is uncommented → Uses Azure OpenAI
#-# - If only GOOGLE_API_KEY is uncommented → Uses Google Gemini  
#-# - If both are uncommented → Uses Azure OpenAI (prioritized)
#+# - If only OPENAI_API_KEY is uncommented → Uses OpenAI (ChatGPT)
#+# - If only GOOGLE_API_KEY is uncommented → Uses Google Gemini
#+# - If multiple are available → Azure OpenAI is prioritized, then OpenAI, then Gemini
 # - No code changes needed, just comment/uncomment API keys above!
 
 # Example Usage Scenarios:
 # 
 # Scenario 1: Azure OpenAI Only
 # AZURE_OPENAI_API_KEY=your-key
 # # GOOGLE_API_KEY=your-key  # commented out
 #
#-# Scenario 2: Gemini Only
#-# # AZURE_OPENAI_API_KEY=your-key  # commented out  
#+# Scenario 2: OpenAI Only
#+# # AZURE_OPENAI_API_KEY=your-key  # commented out
#+# OPENAI_API_KEY=your-key
#+#
#+# Scenario 3: Gemini Only
#+# # AZURE_OPENAI_API_KEY=your-key  # commented out
#+# # OPENAI_API_KEY=your-key  # commented out
 # GOOGLE_API_KEY=your-key
 #
#-# Scenario 3: Both Available (Azure prioritized)
#+# Scenario 4: Multiple Available (Azure prioritized)
 # AZURE_OPENAI_API_KEY=your-key
#+# OPENAI_API_KEY=your-key
 # GOOGLE_API_KEY=your-key
 
 # =============================================================================
 # Application Configuration
 # =============================================================================
 
 
 # Database Configuration (optional)
 DATABASE_URL=sqlite:///./test.db
 
 # API Configuration
 BACKEND_URL=http://localhost:8000
 FRONTEND_URL=http://localhost:3000
 DEBUG=true
 LOG_LEVEL=INFO
 
EOF
)
